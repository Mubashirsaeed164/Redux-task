{"ast":null,"code":"import { type } from \"@testing-library/user-event/dist/type\";\nimport { FETCH_IMAGE_REQUEST } from \"./imageType\";\nconst initialState = {\n  title: '',\n  images: []\n};\n\nconst ImageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(state);\n\n  switch (type.action) {\n    case FETCH_IMAGE_REQUEST:\n      return { ...state,\n        title: action.title,\n        images: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = ImageReducer;\nexport default ImageReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageReducer\");","map":{"version":3,"names":["type","FETCH_IMAGE_REQUEST","initialState","title","images","ImageReducer","state","action","console","log","payload"],"sources":["/home/ilsa/Documents/Redux task/src/redux/images/ImageReducer.js"],"sourcesContent":["import { type } from \"@testing-library/user-event/dist/type\"\nimport { FETCH_IMAGE_REQUEST } from \"./imageType\"\n\n\nconst initialState = {\n    title: '',\n    images: []\n}\n\nconst ImageReducer = (state = initialState, action) => {\n\n    console.log(state);\n\n    switch(type.action){\n        case FETCH_IMAGE_REQUEST:\n            return{\n                ...state,\n                title: action.title,\n                images: action.payload\n    }\n            default: return state\n    }\n\n}\n\nexport default ImageReducer"],"mappings":"AAAA,SAASA,IAAT,QAAqB,uCAArB;AACA,SAASC,mBAAT,QAAoC,aAApC;AAGA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EADU;EAEjBC,MAAM,EAAE;AAFS,CAArB;;AAKA,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;EAEnDC,OAAO,CAACC,GAAR,CAAYH,KAAZ;;EAEA,QAAON,IAAI,CAACO,MAAZ;IACI,KAAKN,mBAAL;MACI,OAAM,EACF,GAAGK,KADD;QAEFH,KAAK,EAAEI,MAAM,CAACJ,KAFZ;QAGFC,MAAM,EAAEG,MAAM,CAACG;MAHb,CAAN;;IAKA;MAAS,OAAOJ,KAAP;EAPjB;AAUH,CAdD;;KAAMD,Y;AAgBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}