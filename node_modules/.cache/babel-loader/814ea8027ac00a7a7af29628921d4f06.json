{"ast":null,"code":"import { FETCH_IMAGE_REQUEST } from \"./imageType\";\nconst initialState = {\n  images: [],\n  title: ''\n};\n\nconst ImageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action.payload);\n\n  switch (action.type) {\n    case FETCH_IMAGE_REQUEST:\n      return { ...state,\n        images: state.images + action.payload,\n        title: action.title\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = ImageReducer;\nexport default ImageReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageReducer\");","map":{"version":3,"names":["FETCH_IMAGE_REQUEST","initialState","images","title","ImageReducer","state","action","console","log","payload","type"],"sources":["/home/ilsa/Documents/Redux task/src/redux/images/ImageReducer.js"],"sourcesContent":["import { FETCH_IMAGE_REQUEST } from \"./imageType\"\n\n\nconst initialState = {\n    images: [],\n    title: ''\n}\n\nconst ImageReducer = (state = initialState, action) => {\n\n    console.log(action.payload);\n\n    switch(action.type){\n        case FETCH_IMAGE_REQUEST:\n            return{\n                ...state,\n                images: state.images + action.payload, \n                title: action.title\n    }\n            default: return state\n    }\n\n}\n\nexport default ImageReducer"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,aAApC;AAGA,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,EADS;EAEjBC,KAAK,EAAE;AAFU,CAArB;;AAKA,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;EAEnDC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB;;EAEA,QAAOH,MAAM,CAACI,IAAd;IACI,KAAKV,mBAAL;MACI,OAAM,EACF,GAAGK,KADD;QAEFH,MAAM,EAAEG,KAAK,CAACH,MAAN,GAAeI,MAAM,CAACG,OAF5B;QAGFN,KAAK,EAAEG,MAAM,CAACH;MAHZ,CAAN;;IAKA;MAAS,OAAOE,KAAP;EAPjB;AAUH,CAdD;;KAAMD,Y;AAgBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}