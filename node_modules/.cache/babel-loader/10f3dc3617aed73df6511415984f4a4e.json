{"ast":null,"code":"import { FETCH_IMAGE_REQUEST } from \"./imageType\";\nconst initialState = []; //  [{\n//     images: [],\n//     title: ''\n// }]\n\nconst ImageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // console.log(action.payload);\n  switch (action.type) {\n    case FETCH_IMAGE_REQUEST:\n      return [...state, {\n        images: action.payload,\n        title: action.title\n      }];\n\n    default:\n      return state;\n  }\n};\n\n_c = ImageReducer;\nexport default ImageReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageReducer\");","map":{"version":3,"names":["FETCH_IMAGE_REQUEST","initialState","ImageReducer","state","action","type","images","payload","title"],"sources":["/home/ilsa/Documents/Redux task/src/redux/images/ImageReducer.js"],"sourcesContent":["import { FETCH_IMAGE_REQUEST } from \"./imageType\"\n\n\nconst initialState =[]\n//  [{\n//     images: [],\n//     title: ''\n// }]\n\nconst ImageReducer = (state = initialState, action) => {\n\n    // console.log(action.payload);\n\n    switch(action.type){\n        case FETCH_IMAGE_REQUEST:\n            return [\n                ...state,\n                {\n                    images: action.payload, \n                    title: action.title\n                }\n            ]      \n            default: return state\n    }\n\n}\n\nexport default ImageReducer"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,aAApC;AAGA,MAAMC,YAAY,GAAE,EAApB,C,CACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBF,YAAyB;EAAA,IAAXG,MAAW;;EAEnD;EAEA,QAAOA,MAAM,CAACC,IAAd;IACI,KAAKL,mBAAL;MACI,OAAO,CACH,GAAGG,KADA,EAEH;QACIG,MAAM,EAAEF,MAAM,CAACG,OADnB;QAEIC,KAAK,EAAEJ,MAAM,CAACI;MAFlB,CAFG,CAAP;;IAOA;MAAS,OAAOL,KAAP;EATjB;AAYH,CAhBD;;KAAMD,Y;AAkBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}